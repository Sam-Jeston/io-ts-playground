const endpoints = require('./dist/examples/proposed')
const chalk = require('chalk')

Object.keys(endpoints).forEach((ep) => {
  const endpoint = endpoints[ep]
  console.log(chalk.green(`Endpoint: ${endpoint.name}`))
  // Print out AST generated by io-ts to the console
  console.log(chalk.cyan(JSON.stringify(endpoint.describe())))

  // Demonstrating argument validation on the VestFunds endpoint
  if (endpoint.name === 'VestFunds') {
    // 1. Invalid argument example
    try {
      spacer()
      const invalidArgs = { a: 'b' }
      console.log(chalk.green(`Supplying invalid arguments of form ${JSON.stringify(invalidArgs)} to VestFunds`))
      endpoint.validateArgs(invalidArgs)
    } catch (e) {
      console.log(chalk.green('Validator threw an error as expected. Error details...'))
      console.log(chalk.yellow(e.message))
    }

    // 2. Valid argument example
    spacer()
    const validArgs = {
      a: {
        vestingTrancheDate: { getSlot: 5 },
        vestingTrancheAmount: {
          getValue: {
            unMap: [[
              { unCurrencySymbol: 'ADA' },
              {
                unMap: [[
                  { unTokenName: 'TYZ' },
                  5
                ]]
              }
            ]]
          }
        }
      },
      b: {
        vestingTrancheDate: { getSlot: 5 },
        vestingTrancheAmount: {
          getValue: {
            unMap: [[
              { unCurrencySymbol: 'ADA' },
              {
                unMap: [[
                  { unTokenName: 'TYZ' },
                  5
                ]]
              }
            ]]
          }
        }
      },
      c: {
        getWallet: 5
      }
    }

    console.log(chalk.green(`Supplying valid arguments to VestFunds`))
    endpoint.validateArgs(validArgs)
    console.log(chalk.cyan('Validator did not throw, as expected'))
  }

  spacer()
})

function spacer() {
  console.log(`
  `)
}